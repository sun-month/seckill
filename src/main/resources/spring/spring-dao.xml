<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		">
	<!-- 1.加载属性文件 -->
	<context:property-placeholder location="classpath:jdbc.properties,classpath:redis.properties" />
	<!-- 2.配置dataSource以及一些启动参数 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!-- 配置连接池基本属性 -->
		<property name="driverClass" value="${jdbc.diverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<!-- 配置c3p0的连接属性 -->
		<property name="maxPoolSize" value="30" />
		<property name="minPoolSize" value="10" />
		<!-- 设置关闭后不自动提交 -->
		<property name="autoCommitOnClose" value="false" />
		<!-- 设置获取连接超时时间 -->
		<property name="checkoutTimeout" value="3000" />
		<!-- 设置获取连接失败重新请求次数 -->
		<property name="acquireRetryAttempts" value="2" />
	</bean>

	<!-- 3.配置sqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置mybatis的主配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描实体包，配置实体别名 -->
		<property name="typeAliasesPackage" value="org.seckill.entity" />
		<!-- 扫描mapper.xml -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4.配置扫描dao包，动态实现dao，并注入到spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出需要扫描的dao接口包 -->
		<property name="basePackage" value="org.seckill.dao" />
	</bean>
	
	<!-- 配置RedisDao -->
	<bean id="redisDao" class="org.seckill.dao.redis.RedisDao">
		<constructor-arg index="0" value="${redis.host}"/>
		<constructor-arg index="1" value="${redis.port}"/>
	</bean>
</beans>